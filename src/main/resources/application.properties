spring.application.name=trade_market

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/trade_market
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.sql.init.mode=never

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Google OAuth
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${SERVER_BASE_URL}/login/oauth2/code/google

# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

# Server Configuration
server.address=0.0.0.0
server.port=8080

# Logging
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=DEBUG
#logging.level.org.springframework.security.oauth2=DEBUG

# security
spring.security.user.name=admin
spring.security.user.password=1234

#Google Map API
google.maps.api.key=${GOOGLE_MAPS_API_KEY}

# Gemini Key
GOOGLE_API_KEY=${GOOGLE_API_KEY}

# WebSocket
spring.web.websocket.max-buffer-size=128KB
spring.web.websocket.time-to-first-message=10s

# Spring
spring.profiles.active=dev

# Gemini
gemini.model=gemini-pro
gemini.temperature=0.7
gemini.topK=32

# s3
aws.access-key-id=${AWS_ACCESS_KEY}
aws.secret-access-key=${AWS_SECRET_KEY}
aws.region=ap-northeast-2
aws.s3.bucket-name=ormi-backend11-owl

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB
